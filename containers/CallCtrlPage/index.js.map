{"version":3,"sources":["containers/CallCtrlPage/index.js"],"names":["CallCtrlPage","props","state","selectedMatcherIndex","avatarUrl","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","hangup","onKeyPadChange","sendDTMF","value","flip","transfer","_updateAvatarAndMatchIndex","nextProps","contactMatch","console","log","phoneNumber","direction","outbound","to","from","fallbackUserName","inbound","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","isOnFlip","isOnTransfer","recordStatus","onBackButtonClick","onAdd","areaCode","countryCode","brand","showContactDisplayPlaceholder","flipNumbers","children","propTypes","shape","string","number","bool","object","isRequired","func","node","array","defaultProps","undefined","mapToProps","_","webphone","locale","contactMatcher","regionSettings","forwardingNumber","currentSession","activeSession","contactMapping","dataMapping","fromMatches","toMatches","fullName","_onAdd","mapToFunctions","sessionId","mute","unmute","hold","unhold","startRecord","stopRecord","flipNumber","transferNumber","CallCtrlContainer","instanceOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;IAEMA,Y;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kJACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,4BAAsB,CADX;AAEXC,iBAAW;AAFA,KAAb;;AAKA,UAAKC,mBAAL,GAA2B,UAACC,MAAD,EAAY;AACrC,UAAMC,cAAc,MAAKN,KAAL,CAAWM,WAAX,IAA0B,EAA9C;AACA,UAAIJ,uBAAuBI,YAAYC,SAAZ,CACzB;AAAA,eAASC,MAAMC,EAAN,KAAaJ,OAAOI,EAA7B;AAAA,OADyB,CAA3B;AAGA,UAAIP,uBAAuB,CAA3B,EAA8B;AAC5BA,+BAAuB,CAAvB;AACD;AACD,YAAKQ,QAAL,CAAc;AACZR,kDADY;AAEZC,mBAAW;AAFC,OAAd;AAIA,UAAMQ,UAAUL,YAAYJ,oBAAZ,CAAhB;AACA,UAAIS,OAAJ,EAAa;AACX,cAAKX,KAAL,CAAWY,2BAAX,CAAuC,MAAKZ,KAAL,CAAWa,OAAX,CAAmBJ,EAA1D,EAA8DE,OAA9D;AACA,cAAKX,KAAL,CAAWc,YAAX,CAAwBH,OAAxB,EAAiCI,IAAjC,CAAsC,UAACZ,SAAD,EAAe;AACnD,gBAAKO,QAAL,CAAc,EAAEP,oBAAF,EAAd;AACD,SAFD;AAGD;AACF,KAnBD;;AAqBA,UAAKa,MAAL,GAAc;AAAA,aACZ,MAAKhB,KAAL,CAAWgB,MAAX,CAAkB,MAAKhB,KAAL,CAAWa,OAAX,CAAmBJ,EAArC,CADY;AAAA,KAAd;AAEA,UAAKQ,QAAL,GAAgB;AAAA,aACd,MAAKjB,KAAL,CAAWiB,QAAX,CAAoB,MAAKjB,KAAL,CAAWa,OAAX,CAAmBJ,EAAvC,CADc;AAAA,KAAhB;AAEA,UAAKS,MAAL,GAAc;AAAA,aACZ,MAAKlB,KAAL,CAAWkB,MAAX,CAAkB,MAAKlB,KAAL,CAAWa,OAAX,CAAmBJ,EAArC,CADY;AAAA,KAAd;AAEA,UAAKU,QAAL,GAAgB;AAAA,aACd,MAAKnB,KAAL,CAAWmB,QAAX,CAAoB,MAAKnB,KAAL,CAAWa,OAAX,CAAmBJ,EAAvC,CADc;AAAA,KAAhB;AAEA,UAAKW,QAAL,GAAgB;AAAA,aACd,MAAKpB,KAAL,CAAWoB,QAAX,CAAoB,MAAKpB,KAAL,CAAWa,OAAX,CAAmBJ,EAAvC,CADc;AAAA,KAAhB;AAEA,UAAKY,YAAL,GAAoB;AAAA,aAClB,MAAKrB,KAAL,CAAWqB,YAAX,CAAwB,MAAKrB,KAAL,CAAWa,OAAX,CAAmBJ,EAA3C,CADkB;AAAA,KAApB;AAEA,UAAKa,MAAL,GAAc;AAAA,aACZ,MAAKtB,KAAL,CAAWsB,MAAX,CAAkB,MAAKtB,KAAL,CAAWa,OAAX,CAAmBJ,EAArC,CADY;AAAA,KAAd;AAEA,UAAKc,cAAL,GAAsB;AAAA,aACpB,MAAKvB,KAAL,CAAWwB,QAAX,CAAoBC,KAApB,EAA2B,MAAKzB,KAAL,CAAWa,OAAX,CAAmBJ,EAA9C,CADoB;AAAA,KAAtB;AAEA,UAAKiB,IAAL,GAAY;AAAA,aACV,MAAK1B,KAAL,CAAW0B,IAAX,CAAgBD,KAAhB,EAAuB,MAAKzB,KAAL,CAAWa,OAAX,CAAmBJ,EAA1C,CADU;AAAA,KAAZ;AAEA,UAAKkB,QAAL,GAAgB;AAAA,aACd,MAAK3B,KAAL,CAAW2B,QAAX,CAAoBF,KAApB,EAA2B,MAAKzB,KAAL,CAAWa,OAAX,CAAmBJ,EAA9C,CADc;AAAA,KAAhB;AA9CiB;AAgDlB;;;;wCAEmB;AAClB,WAAKmB,0BAAL,CAAgC,KAAK5B,KAArC;AACD;;;8CAEyB6B,S,EAAW;AACnC,UAAI,KAAK7B,KAAL,CAAWa,OAAX,CAAmBJ,EAAnB,KAA0BoB,UAAUhB,OAAV,CAAkBJ,EAAhD,EAAoD;AAClD,aAAKmB,0BAAL,CAAgCC,SAAhC;AACD;AACF;;;+CAE0B7B,K,EAAO;AAAA;;AAChC,UAAIW,UAAUX,MAAMa,OAAN,CAAciB,YAA5B;AACA,UAAI5B,uBAAuB,CAA3B;AACA,UAAI,CAACS,OAAL,EAAc;AACZA,kBAAUX,MAAMM,WAAN,IAAqBN,MAAMM,WAAN,CAAkB,CAAlB,CAA/B;AACD,OAFD,MAEO;AACLJ,+BAAuBF,MAAMM,WAAN,CAAkBC,SAAlB,CAA4B;AAAA,iBACjDC,MAAMC,EAAN,KAAaE,QAAQF,EAD4B;AAAA,SAA5B,CAAvB;AAGD;AACD,WAAKC,QAAL,CAAc;AACZR,kDADY;AAEZC,mBAAW;AAFC,OAAd;AAIA,UAAIQ,OAAJ,EAAa;AACXX,cAAMc,YAAN,CAAmBH,OAAnB,EAA4BI,IAA5B,CAAiC,UAACZ,SAAD,EAAe;AAC9C,iBAAKO,QAAL,CAAc,EAAEP,oBAAF,EAAd;AACD,SAFD;AAGD;AACF;;;6BAEQ;AACP4B,cAAQC,GAAR,CAAY,WAAZ;AACA,UAAMnB,UAAU,KAAKb,KAAL,CAAWa,OAA3B;AACA,UAAI,CAACA,QAAQJ,EAAb,EAAiB;AACf,eAAO,IAAP;AACD;AACD,UAAMwB,cAAcpB,QAAQqB,SAAR,KAAsB,yBAAeC,QAArC,GAClBtB,QAAQuB,EADU,GACLvB,QAAQwB,IADvB;AAEA,UAAIC,yBAAJ;AACA,UAAIzB,QAAQqB,SAAR,KAAsB,yBAAeK,OAArC,IAAgD1B,QAAQwB,IAAR,KAAiB,WAArE,EAAkF;AAChFC,2BAAmB,eAAKE,SAAL,CAAe,WAAf,EAA4B,KAAKxC,KAAL,CAAWyC,aAAvC,CAAnB;AACD;AACD,UAAI,CAACH,gBAAL,EAAuB;AACrBA,2BAAmB,eAAKE,SAAL,CAAe,SAAf,EAA0B,KAAKxC,KAAL,CAAWyC,aAArC,CAAnB;AACD;AACD;AACA;AACA,UAAMC,kBAAkB,KAAK1C,KAAL,CAAW0C,eAAX,GACpB,KAAK1C,KAAL,CAAW0C,eADS,GAEpB,eAAKF,SAAL,CAAe,aAAf,EAA8B,KAAKxC,KAAL,CAAWyC,aAAzC,CAFJ;AAGA,aACE;AAAA;AAAA;AACE,2BAAiBC,eADnB;AAEE,yBAAe,KAAK1C,KAAL,CAAWyC,aAF5B;AAGE,uBAAa,KAAKzC,KAAL,CAAW2C,WAH1B;AAIE,uBAAaV,WAJf;AAKE,qBAAWpB,QAAQJ,EALrB;AAME,sBAAYI,QAAQ+B,UANtB;AAOE,qBAAW/B,QAAQgC,SAPrB;AAQE,oBAAUhC,QAAQiC,QARpB;AASE,oBAAUjC,QAAQkC,QATpB;AAUE,oBAAUlC,QAAQmC,QAVpB;AAWE,wBAAcnC,QAAQoC,YAXxB;AAYE,wBAAcpC,QAAQqC,YAZxB;AAaE,6BAAmB,KAAKlD,KAAL,CAAWmD,iBAbhC;AAcE,kBAAQ,KAAKnC,MAdf;AAeE,oBAAU,KAAKC,QAfjB;AAgBE,kBAAQ,KAAKC,MAhBf;AAiBE,oBAAU,KAAKC,QAjBjB;AAkBE,oBAAU,KAAKC,QAlBjB;AAmBE,wBAAc,KAAKC,YAnBrB;AAoBE,0BAAgB,KAAKE,cApBvB;AAqBE,kBAAQ,KAAKD,MArBf;AAsBE,iBAAO,KAAKtB,KAAL,CAAWoD,KAtBpB;AAuBE,gBAAM,KAAK1B,IAvBb;AAwBE,oBAAU,KAAKC,QAxBjB;AAyBE,uBAAa,KAAK3B,KAAL,CAAWM,WAzB1B;AA0BE,wBAAcgC,gBA1BhB;AA2BE,oBAAU,KAAKtC,KAAL,CAAWqD,QA3BvB;AA4BE,uBAAa,KAAKrD,KAAL,CAAWsD,WA5B1B;AA6BE,gCAAsB,KAAKrD,KAAL,CAAWC,oBA7BnC;AA8BE,+BAAqB,KAAKE,mBA9B5B;AA+BE,qBAAW,KAAKH,KAAL,CAAWE,SA/BxB;AAgCE,iBAAO,KAAKH,KAAL,CAAWuD,KAhCpB;AAiCE,yCAA+B,KAAKvD,KAAL,CAAWwD,6BAjC5C;AAkCE,uBAAa,KAAKxD,KAAL,CAAWyD;AAlC1B;AAoCG,aAAKzD,KAAL,CAAW0D;AApCd,OADF;AAwCD;;;;;AAGH3D,aAAa4D,SAAb,GAAyB;AACvB9C,WAAS,oBAAU+C,KAAV,CAAgB;AACvBnD,QAAI,oBAAUoD,MADS;AAEvB3B,eAAW,oBAAU2B,MAFE;AAGvBhB,eAAW,oBAAUiB,MAHE;AAIvBhB,cAAU,oBAAUiB,IAJG;AAKvBhB,cAAU,oBAAUgB,IALG;AAMvBf,cAAU,oBAAUe,IANG;AAOvBd,kBAAc,oBAAUc,IAPD;AAQvBb,kBAAc,oBAAUW,MARD;AASvBzB,QAAI,oBAAUyB,MATS;AAUvBxB,UAAM,oBAAUwB,MAVO;AAWvB/B,kBAAc,oBAAUkC;AAXD,GAAhB,EAYNC,UAboB;AAcvBxB,iBAAe,oBAAUoB,MAAV,CAAiBI,UAdT;AAevBjD,UAAQ,oBAAUkD,IAAV,CAAeD,UAfA;AAgBvBhD,YAAU,oBAAUiD,IAAV,CAAeD,UAhBF;AAiBvB/C,UAAQ,oBAAUgD,IAAV,CAAeD,UAjBA;AAkBvB9C,YAAU,oBAAU+C,IAAV,CAAeD,UAlBF;AAmBvB7C,YAAU,oBAAU8C,IAAV,CAAeD,UAnBF;AAoBvB5C,gBAAc,oBAAU6C,IAAV,CAAeD,UApBN;AAqBvB3C,UAAQ,oBAAU4C,IAAV,CAAeD,UArBA;AAsBvBzC,YAAU,oBAAU0C,IAAV,CAAeD,UAtBF;AAuBvBtB,eAAa,oBAAUuB,IAAV,CAAeD,UAvBL;AAwBvBb,SAAO,oBAAUc,IAAV,CAAeD,UAxBC;AAyBvBvC,QAAM,oBAAUwC,IAAV,CAAeD,UAzBE;AA0BvBtC,YAAU,oBAAUuC,IAAV,CAAeD,UA1BF;AA2BvBP,YAAU,oBAAUS,IA3BG;AA4BvB7D,eAAa,oBAAU8D,KAAV,CAAgBH,UA5BN;AA6BvBZ,YAAU,oBAAUQ,MAAV,CAAiBI,UA7BJ;AA8BvBX,eAAa,oBAAUO,MAAV,CAAiBI,UA9BP;AA+BvBnD,gBAAc,oBAAUoD,IAAV,CAAeD,UA/BN;AAgCvBd,qBAAmB,oBAAUe,IAAV,CAAeD,UAhCX;AAiCvBrD,+BAA6B,oBAAUsD,IAAV,CAAeD,UAjCrB;AAkCvBvB,mBAAiB,oBAAUmB,MAlCJ;AAmCvBN,SAAO,oBAAUM,MAAV,CAAiBI,UAnCD;AAoCvBT,iCAA+B,oBAAUO,IAAV,CAAeE,UApCvB;AAqCvBR,eAAa,oBAAUW,KAAV,CAAgBH;AArCN,CAAzB;;AAwCAlE,aAAasE,YAAb,GAA4B;AAC1BX,YAAUY,SADgB;AAE1B5B,mBAAiB;AAFS,CAA5B;;AAKA,SAAS6B,UAAT,CAAoBC,CAApB,QAOG;AAAA,MANDC,QAMC,QANDA,QAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJDC,cAIC,QAJDA,cAIC;AAAA,MAHDC,cAGC,QAHDA,cAGC;AAAA,MAFDrB,KAEC,QAFDA,KAEC;AAAA,MADDsB,gBACC,QADDA,gBACC;;AACD,MAAMC,iBAAiBL,SAASM,aAAT,IAA0B,EAAjD;AACA,MAAMC,iBAAiBL,kBAAkBA,eAAeM,WAAxD;AACA,MAAMC,cAAeF,kBAAkBA,eAAeF,eAAezC,IAA9B,CAAnB,IAA2D,EAA/E;AACA,MAAM8C,YAAaH,kBAAkBA,eAAeF,eAAe1C,EAA9B,CAAnB,IAAyD,EAA3E;AACA,MAAM9B,cACJwE,eAAe5C,SAAf,KAA6B,yBAAeC,QAA5C,GAAuDgD,SAAvD,GAAmED,WADrE;AAEA,SAAO;AACL3B,WAAOA,MAAM6B,QADR;AAEL9E,4BAFK;AAGLmC,mBAAeiC,OAAOjC,aAHjB;AAIL5B,aAASiE,cAJJ;AAKLzB,cAAUuB,eAAevB,QALpB;AAMLC,iBAAasB,eAAetB,WANvB;AAOLG,iBAAaoB,iBAAiBpB;AAPzB,GAAP;AASD;;AAED,IAAI4B,SAAS,IAAb;AACA,SAASC,cAAT,CAAwBd,CAAxB,SAMG;AAAA,MALDC,QAKC,SALDA,QAKC;AAAA,MAJDG,cAIC,SAJDA,cAIC;AAAA,MAHD9D,YAGC,SAHDA,YAGC;AAAA,MAFDqC,iBAEC,SAFDA,iBAEC;AAAA,MADDC,KACC,SADDA,KACC;;AACD,MAAI,CAACiC,MAAL,EAAaA,SAASjC,KAAT;AACb,MAAIiC,MAAJ,EAAYtD,QAAQC,GAAR,CAAY,OAAZ,EAAqBqD,WAAWjC,KAAhC;AACZ,SAAO;AACLT,iBAAa;AAAA,aAAe,4BAAa;AACvCV,gCADuC;AAEvCoB,kBAAUuB,eAAevB,QAFc;AAGvCC,qBAAasB,eAAetB;AAHW,OAAb,CAAf;AAAA,KADR;AAMLhC,YAAQ;AAAA,aAAamD,SAASnD,MAAT,CAAgBiE,SAAhB,CAAb;AAAA,KANH;AAOLvE,YAAQ;AAAA,aAAayD,SAASe,IAAT,CAAcD,SAAd,CAAb;AAAA,KAPH;AAQLtE,cAAU;AAAA,aAAawD,SAASgB,MAAT,CAAgBF,SAAhB,CAAb;AAAA,KARL;AASLrE,YAAQ;AAAA,aAAauD,SAASiB,IAAT,CAAcH,SAAd,CAAb;AAAA,KATH;AAULpE,cAAU;AAAA,aAAasD,SAASkB,MAAT,CAAgBJ,SAAhB,CAAb;AAAA,KAVL;AAWLnE,cAAU;AAAA,aAAaqD,SAASmB,WAAT,CAAqBL,SAArB,CAAb;AAAA,KAXL;AAYLlE,kBAAc;AAAA,aAAaoD,SAASoB,UAAT,CAAoBN,SAApB,CAAb;AAAA,KAZT;AAaL/D,cAAU,kBAACC,KAAD,EAAQ8D,SAAR;AAAA,aAAsBd,SAASjD,QAAT,CAAkBC,KAAlB,EAAyB8D,SAAzB,CAAtB;AAAA,KAbL;AAcL3E,iCAA6B,qCAAC2E,SAAD,EAAY5E,OAAZ;AAAA,aAC3B8D,SAAS7D,2BAAT,CAAqC2E,SAArC,EAAgD5E,OAAhD,CAD2B;AAAA,KAdxB;AAgBLG,8BAhBK;AAiBLqC,wCAjBK;AAkBLC,gBAlBK;AAmBL1B,UAAM,cAACoE,UAAD,EAAaP,SAAb;AAAA,aAA2Bd,SAAS/C,IAAT,CAAcoE,UAAd,EAA0BP,SAA1B,CAA3B;AAAA,KAnBD;AAoBL5D,cAAU,kBAACoE,cAAD,EAAiBR,SAAjB;AAAA,aAA+Bd,SAAS9C,QAAT,CAAkBoE,cAAlB,EAAkCR,SAAlC,CAA/B;AAAA;AApBL,GAAP;AAsBD;;AAED,IAAMS,oBAAoB,yBACxBzB,UADwB,EAExBe,cAFwB,EAGxBvF,YAHwB,CAA1B;;AAKAiG,kBAAkBrC,SAAlB,GAA8B;AAC5Bc,YAAU,oBAAUwB,UAAV,qBAA+BhC,UADb;AAE5BS,UAAQ,oBAAUuB,UAAV,mBAA6BhC,UAFT;AAG5BV,SAAO,oBAAU0C,UAAV,kBAA4BhC,UAHP;AAI5BW,kBAAgB,oBAAUqB,UAAV,2BAAqChC,UAJzB;AAK5BY,oBAAkB,oBAAUoB,UAAV,6BAAuChC,UAL7B;AAM5BnD,gBAAc,oBAAUoD,IANI;AAO5Bf,qBAAmB,oBAAUe,IAAV,CAAeD,UAPN;AAQ5Bb,SAAO,oBAAUc,IAAV,CAAeD,UARM;AAS5BvB,mBAAiB,oBAAUmB,MATC;AAU5BH,YAAU,oBAAUS,IAVQ;AAW5BX,iCAA+B,oBAAUO;AAXb,CAA9B;;AAcAiC,kBAAkB3B,YAAlB,GAAiC;AAC/BvD,gBAAc;AAAA,WAAM,IAAN;AAAA,GADiB;AAE/B0C,iCAA+B,KAFA;AAG/BE,YAAUY;AAHqB,CAAjC;;kBAMe0B,iB","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport Webphone from 'ringcentral-integration/modules/Webphone';\nimport Brand from 'ringcentral-integration/modules/Brand';\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport RegionSettings from 'ringcentral-integration/modules/RegionSettings';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport ForwardingNumber from 'ringcentral-integration/modules/ForwardingNumber';\n\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\n\nimport i18n from './i18n';\n\nclass CallCtrlPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () =>\n      this.props.onMute(this.props.session.id);\n    this.onUnmute = () =>\n      this.props.onUnmute(this.props.session.id);\n    this.onHold = () =>\n      this.props.onHold(this.props.session.id);\n    this.onUnhold = () =>\n      this.props.onUnhold(this.props.session.id);\n    this.onRecord = () =>\n      this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () =>\n      this.props.onStopRecord(this.props.session.id);\n    this.hangup = () =>\n      this.props.hangup(this.props.session.id);\n    this.onKeyPadChange = value =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.flip = value =>\n      this.props.flip(value, this.props.session.id);\n    this.transfer = value =>\n      this.props.transfer(value, this.props.session.id);\n  }\n\n  componentDidMount() {\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    console.log('re-render');\n    const session = this.props.session;\n    if (!session.id) {\n      return null;\n    }\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    // The label of back button is customizable\n    // the property `backButtonLabel` should be internationalizational\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n    return (\n      <CallCtrlPanel\n        backButtonLabel={backButtonLabel}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnFlip={session.isOnFlip}\n        isOnTransfer={session.isOnTransfer}\n        recordStatus={session.recordStatus}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        hangup={this.hangup}\n        onAdd={this.props.onAdd}\n        flip={this.flip}\n        transfer={this.transfer}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        flipNumbers={this.props.flipNumbers}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    isOnTransfer: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  hangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  flip: PropTypes.func.isRequired,\n  transfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  backButtonLabel: PropTypes.string,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n};\n\nCallCtrlPage.defaultProps = {\n  children: undefined,\n  backButtonLabel: null,\n};\n\nfunction mapToProps(_, {\n  webphone,\n  locale,\n  contactMatcher,\n  regionSettings,\n  brand,\n  forwardingNumber,\n}) {\n  const currentSession = webphone.activeSession || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches = (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound ? toMatches : fromMatches;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    flipNumbers: forwardingNumber.flipNumbers,\n  };\n}\n\nlet _onAdd = null\nfunction mapToFunctions(_, {\n  webphone,\n  regionSettings,\n  getAvatarUrl,\n  onBackButtonClick,\n  onAdd,\n}) {\n  if (!_onAdd) _onAdd = onAdd;\n  if (_onAdd) console.log('onAdd', _onAdd === onAdd);\n  return {\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    hangup: sessionId => webphone.hangup(sessionId),\n    onMute: sessionId => webphone.mute(sessionId),\n    onUnmute: sessionId => webphone.unmute(sessionId),\n    onHold: sessionId => webphone.hold(sessionId),\n    onUnhold: sessionId => webphone.unhold(sessionId),\n    onRecord: sessionId => webphone.startRecord(sessionId),\n    onStopRecord: sessionId => webphone.stopRecord(sessionId),\n    sendDTMF: (value, sessionId) => webphone.sendDTMF(value, sessionId),\n    updateSessionMatchedContact: (sessionId, contact) =>\n      webphone.updateSessionMatchedContact(sessionId, contact),\n    getAvatarUrl,\n    onBackButtonClick,\n    onAdd,\n    flip: (flipNumber, sessionId) => webphone.flip(flipNumber, sessionId),\n    transfer: (transferNumber, sessionId) => webphone.transfer(transferNumber, sessionId)\n  };\n}\n\nconst CallCtrlContainer = connect(\n  mapToProps,\n  mapToFunctions,\n)(CallCtrlPage);\n\nCallCtrlContainer.propTypes = {\n  webphone: PropTypes.instanceOf(Webphone).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  brand: PropTypes.instanceOf(Brand).isRequired,\n  regionSettings: PropTypes.instanceOf(RegionSettings).isRequired,\n  forwardingNumber: PropTypes.instanceOf(ForwardingNumber).isRequired,\n  getAvatarUrl: PropTypes.func,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  backButtonLabel: PropTypes.string,\n  children: PropTypes.node,\n  showContactDisplayPlaceholder: PropTypes.bool,\n};\n\nCallCtrlContainer.defaultProps = {\n  getAvatarUrl: () => null,\n  showContactDisplayPlaceholder: false,\n  children: undefined,\n};\n\nexport default CallCtrlContainer;\n\n"]}