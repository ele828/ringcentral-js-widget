{"version":3,"sources":["containers/IncomingCallPage/index.js"],"names":["IncomingCallPage","props","state","selectedMatcherIndex","avatarUrl","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","answer","reject","toVoiceMail","replyWithMessage","message","onForward","forwardNumber","toggleMinimized","_updateAvatarAndMatchIndex","nextProps","contactMatch","active","minimized","phoneNumber","direction","outbound","to","from","fallbackUserName","inbound","getString","currentLocale","formatPhone","areaCode","countryCode","forwardingNumbers","brand","showContactDisplayPlaceholder","children","propTypes","shape","string","startTime","number","isOnMute","bool","isOnHold","isOnRecord","object","isRequired","func","node","array","defaultProps","undefined","mapToProps","_","webphone","locale","contactMatcher","regionSettings","forwardingNumber","currentSession","ringSession","contactMapping","dataMapping","fromMatches","toMatches","fullName","mapToFunctions","sessionId","forward","IncomingCallContainer","instanceOf"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Brand from 'ringcentral-integration/modules/Brand';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport Webphone from 'ringcentral-integration/modules/Webphone';\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport RegionSettings from 'ringcentral-integration/modules/RegionSettings';\nimport ForwardingNumber from 'ringcentral-integration/modules/ForwardingNumber';\n\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport IncomingCallPanel from '../../components/IncomingCallPanel';\n\nimport i18n from './i18n';\n\nclass IncomingCallPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.answer = () =>\n      this.props.answer(this.props.session.id);\n    this.reject = () =>\n      this.props.reject(this.props.session.id);\n    this.toVoiceMail = () =>\n      this.props.toVoiceMail(this.props.session.id);\n    this.replyWithMessage = message =>\n      this.props.replyWithMessage(this.props.session.id, message);\n    this.onForward = forwardNumber =>\n      this.props.onForward(this.props.session.id, forwardNumber);\n    this.toggleMinimized = () =>\n      this.props.toggleMinimized(this.props.session.id);\n  }\n\n  componentDidMount() {\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let selectedMatcherIndex = 0;\n    let contact = props.session.contactMatch;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const session = this.props.session;\n    const active = !!session.id;\n    if (!active) {\n      return null;\n    }\n    if (session.minimized) {\n      return null;\n    }\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    return (\n      <IncomingCallPanel\n        currentLocale={this.props.currentLocale}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        phoneNumber={phoneNumber}\n        answer={this.answer}\n        reject={this.reject}\n        replyWithMessage={this.replyWithMessage}\n        toVoiceMail={this.toVoiceMail}\n        formatPhone={this.props.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        onBackButtonClick={this.toggleMinimized}\n        forwardingNumbers={this.props.forwardingNumbers}\n        onForward={this.onForward}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n      >\n        {this.props.children}\n      </IncomingCallPanel>\n    );\n  }\n}\n\nIncomingCallPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnRecord: PropTypes.bool,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  onForward: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  brand: PropTypes.string.isRequired,\n};\n\nIncomingCallPage.defaultProps = {\n  children: undefined,\n};\n\nfunction mapToProps(_, {\n  webphone,\n  locale,\n  contactMatcher,\n  regionSettings,\n  forwardingNumber,\n  brand,\n  showContactDisplayPlaceholder,\n}) {\n  const currentSession = webphone.ringSession || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches = (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound ? toMatches : fromMatches;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    forwardingNumbers: forwardingNumber.forwardingNumbers,\n    showContactDisplayPlaceholder,\n  };\n}\n\nfunction mapToFunctions(_, {\n  webphone,\n  regionSettings,\n  getAvatarUrl,\n}) {\n  return {\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    answer: sessionId => webphone.answer(sessionId),\n    reject: sessionId => webphone.reject(sessionId),\n    toVoiceMail: sessionId => webphone.toVoiceMail(sessionId),\n    onForward: (sessionId, forwardNumber) => webphone.forward(sessionId, forwardNumber),\n    replyWithMessage: (sessionId, message) => webphone.replyWithMessage(sessionId, message),\n    toggleMinimized: sessionId => webphone.toggleMinimized(sessionId),\n    updateSessionMatchedContact: (sessionId, contact) =>\n      webphone.updateSessionMatchedContact(sessionId, contact),\n    getAvatarUrl,\n  };\n}\n\nconst IncomingCallContainer = connect(\n  mapToProps,\n  mapToFunctions,\n)(IncomingCallPage);\n\nIncomingCallContainer.propTypes = {\n  showContactDisplayPlaceholder: PropTypes.bool,\n  webphone: PropTypes.instanceOf(Webphone).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  brand: PropTypes.instanceOf(Brand).isRequired,\n  regionSettings: PropTypes.instanceOf(RegionSettings).isRequired,\n  forwardingNumber: PropTypes.instanceOf(ForwardingNumber).isRequired,\n  getAvatarUrl: PropTypes.func,\n  children: PropTypes.node,\n};\n\nIncomingCallContainer.defaultProps = {\n  getAvatarUrl: () => null,\n  showContactDisplayPlaceholder: false,\n  children: undefined,\n};\n\nexport default IncomingCallContainer;\n\n"]}