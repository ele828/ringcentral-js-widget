{"version":3,"sources":["containers/WelcomePage/index.js"],"names":["mapToProps","_","auth","locale","rateLimiter","connectivityMonitor","version","currentLocale","disabled","proxyLoaded","throttling","connectivity","showSpinner","ready","loginStatus","loggingIn","loggingOut","beforeLogout","mapToFunctions","onLogin","setupProxyFrame","clearProxyFrame","onLoginButtonClick","openOAuthPage","WelcomePage","propTypes","instanceOf","isRequired","mainUrl","string","func","default"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAMG;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,MAIC,QAJDA,MAIC;AAAA,MAHDC,WAGC,QAHDA,WAGC;AAAA,MAFDC,mBAEC,QAFDA,mBAEC;AAAA,MADDC,OACC,QADDA,OACC;;AACD,SAAO;AACLC,mBAAeJ,OAAOI,aADjB;AAELC,cACE,CAACN,KAAKO,WAAN,IACAL,YAAYM,UADZ,IAEA,CAACL,oBAAoBM,YALlB;AAOLL,oBAPK;AAQLM,iBACE,CAACV,KAAKW,KAAN,IACAX,KAAKY,WAAL,KAAqB,sBAAYC,SADjC,IAEAb,KAAKY,WAAL,KAAqB,sBAAYE,UAFjC,IAGAd,KAAKY,WAAL,KAAqB,sBAAYG;AAZ9B,GAAP;AAeD;;AAED,SAASC,cAAT,CAAwBjB,CAAxB,SAGG;AAAA,MAFDC,IAEC,SAFDA,IAEC;AAAA,MADDiB,OACC,SADDA,OACC;;AACD,SAAO;AACLC,mBADK,6BACa;AAChBlB,WAAKkB,eAAL,CAAqBD,OAArB;AACD,KAHI;AAILE,mBAJK,6BAIa;AAChBnB,WAAKmB,eAAL;AACD,KANI;AAOLC,sBAPK,gCAOgB;AACnBpB,WAAKqB,aAAL;AACD;AATI,GAAP;AAWD;;AAED,IAAMC,cAAc,yBAClBxB,UADkB,EAElBkB,cAFkB,uBAApB;;AAKA,IAAMO,YAAY;AAChBvB,QAAM,oBAAUwB,UAAV,iBAA2BC,UADjB;AAEhBxB,UAAQ,oBAAUuB,UAAV,mBAA6BC,UAFrB;AAGhBvB,eAAa,oBAAUsB,UAAV,wBAAkCC,UAH/B;AAIhBtB,uBAAqB,oBAAUqB,UAAV,gCAA0CC,UAJ/C;AAKhBC,WAAS,oBAAUC,MALH;AAMhBV,WAAS,oBAAUW,IANH;AAOhBxB,WAAS,oBAAUuB;AAPH,CAAlB;;AAUAL,YAAYC,SAAZ,GAAwBA,SAAxB;;QAGEP,c,GAAAA,c;QACAlB,U,GAAAA,U;QACAyB,S,GAAAA,S;QACeM,O,GAAfP,W","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Auth from 'ringcentral-integration/modules/Auth';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport RateLimiter from 'ringcentral-integration/modules/RateLimiter';\nimport ConnectivityMonitor from 'ringcentral-integration/modules/ConnectivityMonitor';\nimport LoginPanel from '../../components/LoginPanel';\n\nfunction mapToProps(_, {\n  auth,\n  locale,\n  rateLimiter,\n  connectivityMonitor,\n  version,\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    disabled: (\n      !auth.proxyLoaded ||\n      rateLimiter.throttling ||\n      !connectivityMonitor.connectivity\n    ),\n    version,\n    showSpinner: (\n      !auth.ready ||\n      auth.loginStatus === loginStatus.loggingIn ||\n      auth.loginStatus === loginStatus.loggingOut ||\n      auth.loginStatus === loginStatus.beforeLogout\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  auth,\n  onLogin,\n}) {\n  return {\n    setupProxyFrame() {\n      auth.setupProxyFrame(onLogin);\n    },\n    clearProxyFrame() {\n      auth.clearProxyFrame();\n    },\n    onLoginButtonClick() {\n      auth.openOAuthPage();\n    },\n  };\n}\n\nconst WelcomePage = connect(\n  mapToProps,\n  mapToFunctions,\n)(LoginPanel);\n\nconst propTypes = {\n  auth: PropTypes.instanceOf(Auth).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  rateLimiter: PropTypes.instanceOf(RateLimiter).isRequired,\n  connectivityMonitor: PropTypes.instanceOf(ConnectivityMonitor).isRequired,\n  mainUrl: PropTypes.string,\n  onLogin: PropTypes.func,\n  version: PropTypes.string,\n};\n\nWelcomePage.propTypes = propTypes;\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  propTypes,\n  WelcomePage as default,\n};\n"]}