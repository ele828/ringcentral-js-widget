{"version":3,"sources":["components/RecentActivityCalls/index.js"],"names":["getCurrentStatus","currentLocale","direction","result","status","getString","icon","missed","isMissedCall","inbound","outbound","CallItem","call","dateTimeFormatter","duration","startTime","utcTimestamp","Date","getTime","callItem","dl","missedCall","iconWrapper","callIcon","time","propTypes","object","isRequired","func","string","RecentActivityCalls","nextProps","props","calls","isCallsLoaded","callListView","spinner","length","map","id","noRecords","array","bool"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport formatDuration from '../../lib/formatDuration';\nimport Spinner from '../Spinner';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction getCurrentStatus({ direction, result }, currentLocale) {\n  if (direction === 'Inbound') {\n    if (result === 'Missed') {\n      return {\n        status: i18n.getString('missed', currentLocale),\n        icon: dynamicsFont.missed,\n        isMissedCall: true\n      };\n    }\n    return {\n      status: i18n.getString('inBound', currentLocale),\n      icon: dynamicsFont.inbound\n    };\n  }\n  return {\n    status: i18n.getString('outBound', currentLocale),\n    icon: dynamicsFont.outbound\n  };\n}\n\nfunction CallItem({ call, dateTimeFormatter, currentLocale }) {\n  let { duration, startTime } = call;\n  const { status, icon, isMissedCall } = getCurrentStatus(call, currentLocale);\n  startTime = dateTimeFormatter({ utcTimestamp: new Date(startTime).getTime() });\n  duration = formatDuration(duration);\n  return (\n    <div\n      className={styles.callItem}\n    >\n      <dl className={classnames(styles.dl, isMissedCall ? styles.missedCall : '')}>\n        <dt className={styles.status} title={status}>\n          <span className={styles.iconWrapper}>\n            <i className={classnames(icon, styles.callIcon)} title={status} />\n          </span>\n          <span title={status}>{status}</span>\n          <small className={styles.duration} title={duration}>{duration}</small>\n        </dt>\n        <dd className={styles.time} title={startTime}>{startTime}</dd>\n      </dl>\n    </div>\n  );\n}\n\nCallItem.propTypes = {\n  call: PropTypes.object.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired\n};\n\nexport default class RecentActivityCalls extends Component {\n  shouldComponentUpdate(nextProps) {\n    return nextProps.currentLocale !== this.props.currentLocale ||\n      nextProps.calls !== this.props.calls ||\n      nextProps.isCallsLoaded !== this.props.isCallsLoaded;\n  }\n\n  render() {\n    const {\n      currentLocale,\n      calls,\n      isCallsLoaded,\n      dateTimeFormatter\n    } = this.props;\n    let callListView = null;\n    if (!isCallsLoaded) {\n      callListView = (<Spinner className={styles.spinner} ringWidth={4} />);\n    } else if (calls.length > 0) {\n      callListView = calls.map(call => (\n        <CallItem\n          key={call.id}\n          call={call}\n          currentLocale={currentLocale}\n          dateTimeFormatter={dateTimeFormatter}\n        />\n      ));\n    } else {\n      callListView = (<p className={styles.noRecords}>{i18n.getString('noRecords', currentLocale)}</p>);\n    }\n    return (\n      <div className={styles.calls}>\n        {callListView}\n      </div>\n    );\n  }\n}\n\nRecentActivityCalls.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  calls: PropTypes.array.isRequired,\n  isCallsLoaded: PropTypes.bool.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired\n};\n"]}