{"version":3,"sources":["components/CallCtrlPanel/index.js"],"names":["CallCtrlPanel","props","state","isShowKeyPad","isShowFlipPanel","hiddenKeyPad","setState","showKeyPad","showFlipPanel","hideFlipPanel","toggleTransferPanel","isShowTransferPanel","prevState","onKeyPadChange","hangup","currentLocale","isOnFlip","flipNumbers","formatPhone","flip","transfer","isOnTransfer","backButtonLabel","phoneNumber","sessionId","callStatus","startTime","isOnMute","isOnHold","recordStatus","onBackButtonClick","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onAdd","nameMatches","fallBackName","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","avatarUrl","brand","showContactDisplayPlaceholder","children","propTypes","string","array","isRequired","number","bool","func","node","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ActiveCallDialPad from '../ActiveCallDialPad';\nimport ActiveCallPanel from '../ActiveCallPanel';\nimport FlipPanel from '../FlipPanel';\nimport TransferPanel from '../TransferPanel';\n\nclass CallCtrlPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowKeyPad: false,\n      isShowFlipPanel: false,\n    };\n\n    this.hiddenKeyPad = () => {\n      this.setState({\n        isShowKeyPad: false,\n      });\n    };\n\n    this.showKeyPad = () => {\n      this.setState({\n        isShowKeyPad: true,\n      });\n    };\n\n    this.showFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: true\n      });\n    };\n\n    this.hideFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: false\n      });\n    };\n\n    this.toggleTransferPanel = () => {\n      this.setState(prevState => ({\n        isShowTransferPanel: !prevState.isShowTransferPanel\n      }));\n    };\n  }\n\n  render() {\n    if (this.state.isShowKeyPad) {\n      return (\n        <ActiveCallDialPad\n          onChange={this.props.onKeyPadChange}\n          hiddenDialPad={this.hiddenKeyPad}\n          hangup={this.props.hangup}\n          currentLocale={this.props.currentLocale}\n        />\n      );\n    }\n    if (this.state.isShowFlipPanel) {\n      return (\n        <FlipPanel\n          isOnFlip={this.props.isOnFlip}\n          flipNumbers={this.props.flipNumbers}\n          currentLocale={this.props.currentLocale}\n          formatPhone={this.props.formatPhone}\n          hideFlipPanel={this.hideFlipPanel}\n          flip={this.props.flip}\n          complete={this.props.hangup}\n        />\n      );\n    }\n    if (this.state.isShowTransferPanel) {\n      return (\n        <TransferPanel\n          transfer={this.props.transfer}\n          currentLocale={this.props.currentLocale}\n          toggleTransferPanel={this.toggleTransferPanel}\n          isOnTransfer={this.props.isOnTransfer}\n        />\n      );\n    }\n    return (\n      <ActiveCallPanel\n        backButtonLabel={this.props.backButtonLabel}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={this.props.phoneNumber}\n        sessionId={this.props.sessionId}\n        callStatus={this.props.callStatus}\n        startTime={this.props.startTime}\n        isOnMute={this.props.isOnMute}\n        isOnHold={this.props.isOnHold}\n        recordStatus={this.props.recordStatus}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.props.onMute}\n        onUnmute={this.props.onUnmute}\n        onHold={this.props.onHold}\n        onUnhold={this.props.onUnhold}\n        onRecord={this.props.onRecord}\n        onStopRecord={this.props.onStopRecord}\n        onShowKeyPad={this.showKeyPad}\n        hangup={this.props.hangup}\n        onAdd={this.props.onAdd}\n        nameMatches={this.props.nameMatches}\n        fallBackName={this.props.fallBackName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.props.selectedMatcherIndex}\n        onSelectMatcherName={this.props.onSelectMatcherName}\n        avatarUrl={this.props.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        onShowFlipPanel={this.showFlipPanel}\n        onToggleTransferPanel={this.toggleTransferPanel}\n        flipNumbers={this.props.flipNumbers}\n      >\n        {this.props.children}\n      </ActiveCallPanel>\n    );\n  }\n}\n\nCallCtrlPanel.propTypes = {\n  callStatus: PropTypes.string,\n  sessionId: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  isOnFlip: PropTypes.bool,\n  isOnTransfer: PropTypes.bool,\n  flipNumbers: PropTypes.array,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  hangup: PropTypes.func.isRequired,\n  flip: PropTypes.func.isRequired,\n  transfer: PropTypes.func.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onKeyPadChange: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  backButtonLabel: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n};\n\nCallCtrlPanel.defaultProps = {\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  isOnTransfer: false,\n  isOnFlip: false,\n  flipNumbers: [],\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  backButtonLabel: 'Active Calls',\n  sessionId: undefined,\n  callStatus: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n};\n\nexport default CallCtrlPanel;\n"]}