{"version":3,"sources":["components/ForwardForm/index.js"],"names":["cleanRegex","ForwardNumbers","numbers","onSelect","selected","formatPhone","map","number","index","id","active","label","colon","phoneNumber","propTypes","array","isRequired","func","ForwardForm","props","state","selectedIndex","customValue","handling","filter","value","replace","onCustomValueChange","e","currentTarget","cleanValue","setState","onChange","getValue","onForward","result","_mounted","onCancel","onSelectCustomNumber","forwardingNumbers","length","customInput","input","setTimeout","focus","focusInput","forwardingNumber","className","currentLocale","disableButton","root","custromNumber","customLabel","getString","buttonGroup","cancelButton","forwardButton","disabled","buttonText","string","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isBlank from 'ringcentral-integration/lib/isBlank';\n\nimport TextInput from '../TextInput';\nimport Button from '../Button';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst cleanRegex = /[^\\d+*-\\s]/g;\n\nfunction ForwardNumbers({\n  numbers,\n  onSelect,\n  selected,\n  formatPhone,\n}) {\n  return (\n    <div className={styles.numbers}>\n      {\n        numbers.map((number, index) => (\n          <div\n            key={number.id}\n            className={\n              classnames(styles.number, (index === selected ? styles.active : null))\n            }\n            onClick={() => onSelect(index)}\n          >\n            <span className={styles.label} title={number.label}>{number.label}</span>\n            <span className={styles.colon}>:</span>\n            <span >{formatPhone(number.phoneNumber)}</span>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nForwardNumbers.propTypes = {\n  numbers: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.number.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n};\n\nexport default class ForwardForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0,\n      customValue: '',\n      handling: false,\n    };\n\n    this.filter = value => value.replace(cleanRegex, '');\n    this.onCustomValueChange = (e) => {\n      const value = e.currentTarget.value;\n      const cleanValue = this.filter(value);\n      this.setState({\n        customValue: cleanValue,\n      });\n      if (typeof this.props.onChange === 'function') {\n        this.props.onChange(cleanValue);\n      }\n    };\n\n    this.onSelect = (index) => {\n      this.setState({\n        selectedIndex: index,\n      });\n      if (typeof this.props.onChange === 'function') {\n        this.props.onChange(this.getValue());\n      }\n    };\n\n    this.onForward = async () => {\n      this.setState({\n        handling: true,\n      });\n      const result = await this.props.onForward(this.getValue());\n      if (!this._mounted) {\n        return;\n      }\n      this.setState({\n        handling: false,\n      });\n      if (result) {\n        this.props.onCancel();\n      }\n    };\n\n    this.onSelectCustomNumber = () => {\n      this.onSelect(this.props.forwardingNumbers.length);\n      if (this.customInput && this.customInput.input) {\n        setTimeout(() => {\n          this.customInput.input.focus();\n        }, 100);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this.focusInput();\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  getValue() {\n    if (this.state.selectedIndex < this.props.forwardingNumbers.length) {\n      const forwardingNumber = this.props.forwardingNumbers[this.state.selectedIndex];\n      return (\n        forwardingNumber && forwardingNumber.phoneNumber\n      );\n    }\n    return this.state.customValue;\n  }\n\n  focusInput() {\n    if (\n      this.state.selectedIndex === this.props.forwardingNumbers.length &&\n      this.customInput &&\n      this.customInput.input\n    ) {\n      this.customInput.input.focus();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      onCancel,\n      currentLocale,\n      forwardingNumbers,\n      formatPhone,\n    } = this.props;\n    const value = this.getValue();\n    const disableButton = isBlank(value) && !this.state.handling;\n    return (\n      <div className={classnames(styles.root, className)}>\n        <ForwardNumbers\n          formatPhone={formatPhone}\n          numbers={forwardingNumbers}\n          onSelect={this.onSelect}\n          selected={this.state.selectedIndex}\n        />\n        <div\n          className={\n            classnames(\n              styles.custromNumber,\n              this.state.selectedIndex === forwardingNumbers.length ? styles.active : null\n            )\n          }\n          onClick={this.onSelectCustomNumber}\n        >\n          <div className={styles.customLabel}>\n            {i18n.getString('customNumber', currentLocale)}\n          </div>\n          <TextInput\n            ref={(input) => { this.customInput = input; }}\n            filter={this.filter}\n            className={styles.customInput}\n            value={this.state.customValue}\n            onChange={this.onCustomValueChange}\n          />\n        </div>\n        <div className={styles.buttonGroup}>\n          <Button\n            className={styles.cancelButton}\n            onClick={onCancel}\n          >\n            {i18n.getString('cancel', currentLocale)}\n          </Button>\n          <Button\n            className={\n              classnames(styles.forwardButton, disableButton ? styles.disabled : null)\n            }\n            onClick={this.onForward}\n            disabled={disableButton}\n          >\n            <span className={styles.buttonText}>\n              {i18n.getString('forward', currentLocale)}\n            </span>\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nForwardForm.propTypes = {\n  className: PropTypes.string,\n  onCancel: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onForward: PropTypes.func.isRequired,\n  onChange: PropTypes.func,\n};\n\nForwardForm.defaultProps = {\n  className: null,\n  onChange: undefined,\n};\n"]}