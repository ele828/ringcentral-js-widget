{"version":3,"sources":["components/PresenceSettingSection/index.js"],"names":["PresenceItem","getPresenceStatusName","currentUserStatus","currentDndStatus","currentLocale","busy","getString","props","className","presenceItem","selected","name","userStatus","dndStatus","onClick","statusIcon","statusName","propTypes","func","isRequired","string","bool","defaultProps","PresenceSettingSection","state","showSelects","showPresenceSettings","toggleShow","setState","preState","onCallQueueChange","doNotAcceptAnyCalls","takeAllCalls","doNotAcceptDepartmentCalls","toggleAcceptCallQueueCalls","sectionClass","section","showDropdown","acceptQueueCalls","isCallQueueMember","currentStatus","dropdownIcon","arrow","title","subTitle","presenceList","available","setAvailable","setBusy","setDoNotDisturb","offline","setInvisible"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport presenceStatus from 'ringcentral-integration/modules/Presence/presenceStatus';\nimport dndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\n\nimport IconLine from '../IconLine';\nimport Line from '../Line';\nimport Switch from '../Switch';\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction getPresenceStatusName(currentUserStatus, currentDndStatus, currentLocale) {\n  if (currentUserStatus !== presenceStatus.busy) {\n    return i18n.getString(currentUserStatus, currentLocale);\n  }\n  return i18n.getString(currentUserStatus + currentDndStatus, currentLocale);\n}\n\nexport function PresenceItem(props) {\n  const className = classnames(\n    styles.presenceItem,\n    props.selected ? styles.selected : null\n  );\n  const name = getPresenceStatusName(\n    props.userStatus,\n    props.dndStatus,\n    props.currentLocale\n  );\n  return (\n    <a className={className} onClick={props.onClick}>\n      <PresenceStatusIcon\n        className={styles.statusIcon}\n        userStatus={props.userStatus}\n        dndStatus={props.dndStatus}\n      />\n      <span className={styles.statusName}>\n        {name}\n      </span>\n    </a>\n  );\n}\n\nPresenceItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  userStatus: PropTypes.string.isRequired,\n  dndStatus: PropTypes.string,\n  selected: PropTypes.bool.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nPresenceItem.defaultProps = {\n  dndStatus: null,\n};\n\nexport default class PresenceSettingSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelects: props.showPresenceSettings,\n    };\n\n    this.toggleShow = () => {\n      this.setState(preState => ({\n        showSelects: !preState.showSelects,\n      }));\n    };\n\n    this.onCallQueueChange = () => {\n      if (this.state.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n        return;\n      }\n      this.setState(preState => ({\n        dndStatus: (\n          preState.dndStatus === dndStatus.takeAllCalls ?\n            dndStatus.doNotAcceptDepartmentCalls :\n            dndStatus.takeAllCalls\n        ),\n      }));\n      this.props.toggleAcceptCallQueueCalls();\n    };\n  }\n\n  render() {\n    const sectionClass = classnames(\n      styles.section,\n      this.state.showSelects ? styles.showDropdown : null,\n    );\n    const acceptQueueCalls = this.props.isCallQueueMember ? (\n      <IconLine\n        icon={\n          <Switch\n            checked={this.props.dndStatus === dndStatus.takeAllCalls}\n            onChange={this.onCallQueueChange}\n          />\n        }\n      >\n        {i18n.getString('acceptQueueCalls', this.props.currentLocale)}\n      </IconLine>\n    ) : null;\n    const currentStatus = getPresenceStatusName(\n      this.props.userStatus,\n      this.props.dndStatus,\n      this.props.currentLocale\n    );\n    return (\n      <section className={sectionClass}>\n        <IconLine\n          icon={\n            <span className={styles.dropdownIcon} >\n              <i className={dynamicsFont.arrow} />\n            </span>\n          }\n          onClick={this.toggleShow}\n        >\n          <div className={styles.title}>\n            {i18n.getString('status', this.props.currentLocale)}\n          </div>\n          <div className={styles.subTitle}>\n            <PresenceStatusIcon\n              className={styles.statusIcon}\n              userStatus={this.props.userStatus}\n              dndStatus={this.props.dndStatus}\n            />\n            <span className={styles.statusName}>\n              {currentStatus}\n            </span>\n          </div>\n        </IconLine>\n        <Line className={styles.presenceList}>\n          <PresenceItem\n            userStatus={presenceStatus.available}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setAvailable}\n            selected={this.props.userStatus === presenceStatus.available}\n          />\n          <PresenceItem\n            userStatus={presenceStatus.busy}\n            dndStatus={dndStatus.takeAllCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setBusy}\n            selected={\n              this.props.userStatus === presenceStatus.busy &&\n              this.props.dndStatus !== dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.busy}\n            dndStatus={dndStatus.doNotAcceptAnyCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setDoNotDisturb}\n            selected={\n              this.props.userStatus === presenceStatus.busy &&\n              this.props.dndStatus === dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.offline}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setInvisible}\n            selected={this.props.userStatus === presenceStatus.offline}\n          />\n        </Line>\n        {acceptQueueCalls}\n      </section>\n    );\n  }\n}\n\nPresenceSettingSection.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  dndStatus: PropTypes.string.isRequired,\n  userStatus: PropTypes.string.isRequired,\n  isCallQueueMember: PropTypes.bool.isRequired,\n  setAvailable: PropTypes.func.isRequired,\n  setBusy: PropTypes.func.isRequired,\n  setDoNotDisturb: PropTypes.func.isRequired,\n  setInvisible: PropTypes.func.isRequired,\n  toggleAcceptCallQueueCalls: PropTypes.func.isRequired,\n  showPresenceSettings: PropTypes.bool.isRequired,\n};\n"]}