{"version":3,"sources":["components/NavigationBar/index.js"],"names":["NavigationBar","props","tabWidth","tabs","length","NavigationButton","button","root","className","map","t","idx","goTo","path","isActive","currentPath","propTypes","string","oneOfType","func","isRequired","element","arrayOf","shape","icon","node","activeIcon","label","noticeCounts","number","defaultProps","undefined"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAMC,WAAWD,MAAME,IAAN,CAAWC,MAAX,GAAoB,CAApB,GACX,IAAIH,MAAME,IAAN,CAAWC,MAAhB,GAA0B,GADd,SAEf,CAFF;AAGA,MAAMC,mBAAmBJ,MAAMK,MAA/B;AACA,SACE;AAAA;AAAA,MAAK,WAAW,0BAAW,iBAAOC,IAAlB,EAAwBN,MAAMO,SAA9B,CAAhB;AAEIP,UAAME,IAAN,CAAWM,GAAX,CAAe,UAACC,CAAD,EAAIC,GAAJ;AAAA,aACb,8BAAC,gBAAD,6BACMD,CADN;AAEE,aAAKC,GAFP;AAGE,iBAAS,mBAAM;AACbV,gBAAMW,IAAN,CAAWF,EAAEG,IAAb;AACD,SALH;AAME,gBACGH,EAAEI,QAAF,IAAcJ,EAAEI,QAAF,CAAWb,MAAMc,WAAjB,CAAf,IACAL,EAAEG,IAAF,KAAWZ,MAAMc,WARrB;AAUE,eAAOb;AAVT,SADa;AAAA,KAAf;AAFJ,GADF;AAoBD;AACDF,cAAcgB,SAAd,GAA0B;AACxBR,aAAW,oBAAUS,MADG;AAExBX,UAAQ,oBAAUY,SAAV,CAAoB,CAC1B,oBAAUC,IAAV,CAAeC,UADW,EAE1B,oBAAUC,OAAV,CAAkBD,UAFQ,CAApB,EAGLA,UALqB;AAMxBjB,QAAM,oBAAUmB,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AACtCC,UAAM,oBAAUC,IAAV,CAAeL,UADiB;AAEtCM,gBAAY,oBAAUD,IAFgB;AAGtCE,WAAO,oBAAUV,MAHqB;AAItCJ,UAAM,oBAAUI,MAAV,CAAiBG,UAJe;AAKtCN,cAAU,oBAAUK,IALkB;AAMtCS,kBAAc,oBAAUC;AANc,GAAhB,CAAlB,CANkB;AAcxBjB,QAAM,oBAAUO,IAAV,CAAeC,UAdG;AAexBL,eAAa,oBAAUE,MAAV,CAAiBG;AAfN,CAA1B;AAiBApB,cAAc8B,YAAd,GAA6B;AAC3BtB,aAAWuB,SADgB;AAE3B5B,QAAM;AAFqB,CAA7B;;kBAKeH,a","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nfunction NavigationBar(props) {\n  const tabWidth = props.tabs.length > 0 ?\n    `${(1 / props.tabs.length) * 100}%` :\n    0;\n  const NavigationButton = props.button;\n  return (\n    <nav className={classnames(styles.root, props.className)}>\n      {\n        props.tabs.map((t, idx) => (\n          <NavigationButton\n            {...t}\n            key={idx}\n            onClick={() => {\n              props.goTo(t.path);\n            }}\n            active={\n              (t.isActive && t.isActive(props.currentPath)) ||\n              t.path === props.currentPath\n            }\n            width={tabWidth}\n          />\n        ))\n      }\n    </nav>\n  );\n}\nNavigationBar.propTypes = {\n  className: PropTypes.string,\n  button: PropTypes.oneOfType([\n    PropTypes.func.isRequired,\n    PropTypes.element.isRequired\n  ]).isRequired,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    icon: PropTypes.node.isRequired,\n    activeIcon: PropTypes.node,\n    label: PropTypes.string,\n    path: PropTypes.string.isRequired,\n    isActive: PropTypes.func,\n    noticeCounts: PropTypes.number,\n  })),\n  goTo: PropTypes.func.isRequired,\n  currentPath: PropTypes.string.isRequired,\n};\nNavigationBar.defaultProps = {\n  className: undefined,\n  tabs: [],\n};\n\nexport default NavigationBar;\n"]}