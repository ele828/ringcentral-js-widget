{"version":3,"sources":["components/ConnectivityAlert/index.js"],"names":["ConnectivityAlert","message","currentLocale","getString","propTypes","shape","string","isRequired","handleMessage","disconnected"],"mappings":";;;;;kBAMwBA,iB;;AANxB;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEe,SAASA,iBAAT,OAKZ;AAAA,MAHCC,OAGD,QAJDA,OAIC,CAHCA,OAGD;AAAA,MADDC,aACC,QADDA,aACC;;AACD,SACE;AAAA;AAAA;AACG,mBAAKC,SAAL,CAAeF,OAAf,EAAwBC,aAAxB;AADH,GADF;AAKD;;AAEDF,kBAAkBI,SAAlB,GAA8B;AAC5BH,WAAS,oBAAUI,KAAV,CAAgB;AACvBJ,aAAS,oBAAUK,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAHyB;AAI5BL,iBAAe,oBAAUI,MAAV,CAAiBC;AAJJ,CAA9B;;AAOAP,kBAAkBQ,aAAlB,GAAkC;AAAA,MAAGP,OAAH,SAAGA,OAAH;AAAA,SAChCA,YAAY,sCAA4BQ,YADR;AAAA,CAAlC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport connectivityMonitorMessages from\n  'ringcentral-integration/modules/ConnectivityMonitor/connectivityMonitorMessages';\nimport i18n from './i18n';\n\nexport default function ConnectivityAlert({\n  message: {\n    message,\n  },\n  currentLocale,\n}) {\n  return (\n    <div>\n      {i18n.getString(message, currentLocale)}\n    </div>\n  );\n}\n\nConnectivityAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nConnectivityAlert.handleMessage = ({ message }) => (\n  message === connectivityMonitorMessages.disconnected\n);\n"]}