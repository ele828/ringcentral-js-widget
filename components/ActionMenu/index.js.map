{"version":3,"sources":["components/ActionMenu/index.js"],"names":["ClickToDialButton","className","onClickToDial","disableLinks","disableClickToDial","phoneNumber","title","call","propTypes","string","func","bool","defaultProps","undefined","ClickToSmsButton","onClickToSms","sms","composeText","EntityButton","onViewEntity","onCreateEntity","hasEntity","isCreating","viewEntityTitle","createEntityTitle","spinner","spinnerContainer","icon","record","addEntity","onClick","entity","ActionMenu","props","onCreateEnityModal","entityType","closeEntityModal","onCancelEntityModal","openEntityModal","setState","entityModalVisible","captureClick","e","stopPropagation","state","currentLocale","onLog","isLogged","isLogging","addLogTitle","editLogTitle","callTitle","textTitle","logButton","baseGroup","entityButton","entityModal","hasBaseGroup","clickToDialButton","secondGroup","clickToSmsButton","hasSecondGroup","root","isRequired"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Spinner from '../Spinner';\nimport SlideMenu from '../SlideMenu';\nimport EntityModal from '../EntityModal';\nimport Button from '../Button';\nimport LogButton from '../LogButton';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nfunction ClickToDialButton({\n  className,\n  onClickToDial,\n  disableLinks,\n  disableClickToDial,\n  phoneNumber,\n  title,\n}) {\n  return (\n    <Button\n      className={classnames(styles.call, className)}\n      onClick={onClickToDial}\n      disabled={disableLinks || disableClickToDial || !phoneNumber} >\n      <span\n        className={dynamicsFont.call}\n        title={title}/>\n    </Button>\n  );\n}\nClickToDialButton.propTypes = {\n  className: PropTypes.string,\n  onClickToDial: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n};\nClickToDialButton.defaultProps = {\n  className: undefined,\n  onClickToDial: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n  phoneNumber: undefined,\n};\n\nfunction ClickToSmsButton({\n  className,\n  onClickToSms,\n  disableLinks,\n  phoneNumber,\n  title,\n}) {\n  return (\n    <Button\n      className={classnames(styles.sms, className)}\n      onClick={onClickToSms}\n      disabled={disableLinks || !phoneNumber} >\n      <span\n        className={dynamicsFont.composeText}\n        title={title}/>\n    </Button>\n  );\n}\nClickToSmsButton.propTypes = {\n  className: PropTypes.string,\n  onClickToSms: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n};\nClickToSmsButton.defaultProps = {\n  className: undefined,\n  onClickToSms: undefined,\n  disableLinks: false,\n  phoneNumber: undefined,\n};\n\nfunction EntityButton({\n  className,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  isCreating,\n  disableLinks,\n  viewEntityTitle,\n  createEntityTitle,\n}) {\n  // console.debug('isCreating', isCreating);\n  const spinner = isCreating ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  const icon = hasEntity ? dynamicsFont.record : dynamicsFont.addEntity;\n  const onClick = hasEntity ? onViewEntity : onCreateEntity;\n  const title = hasEntity ? viewEntityTitle : createEntityTitle;\n  return (\n    <Button\n      className={classnames(styles.entity, className)}\n      onClick={onClick}\n      disabled={disableLinks} >\n\n      <span\n        className={icon}\n        title={title}\n      />\n      {spinner}\n    </Button>\n  );\n}\nEntityButton.propTypes = {\n  className: PropTypes.string,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n};\nEntityButton.defaultProps = {\n  className: undefined,\n  onViewEntity: undefined,\n  hasEntity: false,\n  onCreateEntity: undefined,\n  isCreating: false,\n  disableLinks: false,\n};\n\n\nexport default class ActionMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      entityModalVisible: false,\n    };\n  }\n  onCreateEnityModal = (entityType) => {\n    this.props.onCreateEntity(entityType);\n    this.closeEntityModal();\n  }\n  onCancelEntityModal = () => {\n    this.closeEntityModal();\n  }\n  openEntityModal = () => {\n    this.setState({\n      entityModalVisible: true\n    });\n  }\n  closeEntityModal = () => {\n    this.setState({\n      entityModalVisible: false\n    });\n  }\n  captureClick = (e) => {\n    // e.captureClick = this.props.captureClick;\n    if (this.props.stopPropagation) {\n      e.stopPropagation();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      currentLocale,\n      onLog,\n      isLogged,\n      isLogging,\n      isCreating,\n      onViewEntity,\n      onCreateEntity,\n      hasEntity,\n      onClickToDial,\n      onClickToSms,\n      phoneNumber,\n      disableLinks,\n      disableClickToDial,\n      stopPropagation,\n      addLogTitle,\n      editLogTitle,\n      callTitle,\n      textTitle,\n      createEntityTitle,\n      viewEntityTitle,\n    } = this.props;\n\n    const logButton = onLog ?\n      (\n        <LogButton\n          className={styles.baseGroup}\n          onLog={onLog}\n          disableLinks={disableLinks}\n          isLogged={isLogged}\n          isLogging={isLogging}\n          currentLocale={currentLocale}\n          addTitle={addLogTitle}\n          editTitle={editLogTitle}\n        />\n      ) :\n      null;\n\n    let entityButton;\n    if (hasEntity && onViewEntity) {\n      entityButton = (<EntityButton\n        className={styles.baseGroup}\n        onViewEntity={onViewEntity}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        viewEntityTitle={viewEntityTitle}\n      />);\n    } else if (!hasEntity && phoneNumber && onCreateEntity) {\n      entityButton = (<EntityButton\n        className={styles.baseGroup}\n        onCreateEntity={this.openEntityModal}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        createEntityTitle={createEntityTitle}\n      />);\n    } else {\n      entityButton = null;\n    }\n\n    const entityModal = (!hasEntity && phoneNumber) ?\n      (<EntityModal\n        currentLocale={currentLocale}\n        show={this.state.entityModalVisible}\n        onCreate={this.onCreateEnityModal}\n        onCancel={this.onCancelEntityModal}\n      />\n      ) : null;\n\n    const hasBaseGroup = !!(logButton || entityButton);\n\n    const clickToDialButton = onClickToDial ?\n      (\n        <ClickToDialButton\n          className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n          onClickToDial={onClickToDial}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          disableClickToDial={disableClickToDial}\n          currentLocale={currentLocale}\n          title={callTitle}\n        />\n      ) :\n      null;\n    const clickToSmsButton = onClickToSms ?\n      (\n        <ClickToSmsButton\n          className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n          onClickToSms={onClickToSms}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          currentLocale={currentLocale}\n          title={textTitle}\n        />\n      ) :\n      null;\n    const hasSecondGroup = hasBaseGroup && !!(clickToDialButton || clickToSmsButton);\n    if (hasSecondGroup) {\n      // slide menu\n      return (\n        <div\n          onClick={this.captureClick}>\n          <SlideMenu\n            className={classnames(styles.root, className)}\n            minWidth={40}\n            maxWidth={75} >\n            {clickToDialButton}\n            {clickToSmsButton}\n            {entityButton}\n            {logButton}\n            {entityModal}\n          </SlideMenu>\n        </div>\n      );\n    } else if (\n      !clickToDialButton &&\n      !clickToSmsButton &&\n      !entityButton &&\n      !logButton\n    ) {\n      return null;\n    }\n    // no slide menu\n    return (\n      <div\n        onClick={this.captureClick} >\n        <div className={classnames(styles.root, className)}>\n          {clickToDialButton}\n          {clickToSmsButton}\n          {entityButton}\n          {logButton}\n          {entityModal}\n        </div>\n      </div>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onLog: PropTypes.func,\n  isLogged: PropTypes.bool,\n  isLogging: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  phoneNumber: PropTypes.string,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  stopPropagation: PropTypes.bool,\n  captureClick: PropTypes.bool,\n  addLogTitle: PropTypes.string,\n  editLogTitle: PropTypes.string,\n  textTitle: PropTypes.string,\n  callTitle: PropTypes.string,\n  createEntityTitle: PropTypes.string,\n  viewEntityTitle: PropTypes.string,\n};\nActionMenu.defaultProps = {\n  className: undefined,\n  onLog: undefined,\n  isLogged: false,\n  isLogging: false,\n  isCreating: false,\n  onViewEntity: undefined,\n  onCreateEntity: undefined,\n  hasEntity: false,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  phoneNumber: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n  stopPropagation: false,\n  captureClick: false,\n  addLogTitle: undefined,\n  editLogTitle: undefined,\n  textTitle: undefined,\n  callTitle: undefined,\n  createEntityTitle: undefined,\n  viewEntityTitle: undefined,\n};\n"]}