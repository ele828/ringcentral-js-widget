{"version":3,"sources":["components/IncomingCallPad/index.js"],"names":["IncomingCallPad","props","state","showForward","forwardNumber","replyMessage","showReplyWithMessage","onShowForwardChange","visible","setState","onForwardNumberChange","closeForwardForm","onShowReplyWithMessageChange","onReplyMessageChange","message","closeReplyWithMessage","currentLocale","reject","toVoiceMail","answer","forwardingNumbers","formatPhone","className","root","forwardContainner","containner","replyWithMessageContainner","buttonRow","onForward","getString","callButton","replyWithMessage","answerButtonGroup","rejectButton","bigCallButton","answerButton","propTypes","func","isRequired","string","array","defaultProps","phone"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAEqBA,e;;;AACnB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,wJACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,mBAAa,KADF;AAEXC,qBAAe,EAFJ;AAGXC,oBAAc,IAHH;AAIXC,4BAAsB;AAJX,KAAb;AAMA,UAAKC,mBAAL,GAA2B,UAACC,OAAD,EAAa;AACtC,YAAKC,QAAL,CAAc;AACZN,qBAAaK,OADD;AAEZJ,uBAAe;AAFH,OAAd;AAID,KALD;AAMA,UAAKM,qBAAL,GAA6B,UAACN,aAAD,EAAmB;AAC9C,YAAKK,QAAL,CAAc,EAAEL,4BAAF,EAAd;AACD,KAFD;AAGA,UAAKO,gBAAL,GAAwB,YAAM;AAC5B,YAAKJ,mBAAL,CAAyB,KAAzB;AACD,KAFD;AAGA,UAAKK,4BAAL,GAAoC,UAACJ,OAAD,EAAa;AAC/C,YAAKC,QAAL,CAAc;AACZH,8BAAsBE;AADV,OAAd;AAGD,KAJD;AAKA,UAAKK,oBAAL,GAA4B,UAACC,OAAD,EAAa;AACvC,YAAKL,QAAL,CAAc,EAAEJ,cAAcS,OAAhB,EAAd;AACD,KAFD;AAGA,UAAKC,qBAAL,GAA6B,YAAM;AACjC,YAAKH,4BAAL,CAAkC,KAAlC;AACD,KAFD;AA5BiB;AA+BlB;;;;6BAEQ;AAAA;;AAAA,mBASH,KAAKX,KATF;AAAA,UAELe,aAFK,UAELA,aAFK;AAAA,UAGLC,MAHK,UAGLA,MAHK;AAAA,UAILC,WAJK,UAILA,WAJK;AAAA,UAKLC,MALK,UAKLA,MALK;AAAA,UAMLC,iBANK,UAMLA,iBANK;AAAA,UAOLC,WAPK,UAOLA,WAPK;AAAA,UAQLC,SARK,UAQLA,SARK;;AAUP,aACE;AAAA;AAAA,UAAK,WAAW,0BAAW,iBAAOC,IAAlB,EAAwBD,SAAxB,CAAhB;AACE;AACE,qBAAW,iBAAOE,iBADpB;AAEE,eAAK,aAACC,UAAD,EAAgB;AACnB,mBAAKD,iBAAL,GAAyBC,UAAzB;AACD;AAJH,UADF;AAOE;AACE,qBAAW,iBAAOC,0BADpB;AAEE,eAAK,aAACD,UAAD,EAAgB;AACnB,mBAAKC,0BAAL,GAAkCD,UAAlC;AACD;AAJH,UAPF;AAaE;AAAA;AAAA,YAAK,WAAW,iBAAOE,SAAvB;AACE;AAAA;AAAA;AACE,8BAAgB,KADlB;AAEE,uBAAS,KAAKzB,KAAL,CAAWC,WAFtB;AAGE,+BAAiB,KAAKI,mBAHxB;AAIE,yBAAU,UAJZ;AAKE,uBAAQ,OALV;AAME,4BAAc,uCAAK,WAAU,wBAAf,GANhB;AAOE,mCAAqB;AAAA,uBAAM,OAAKiB,iBAAX;AAAA,eAPvB;AAQE,uBACE;AACE,mCAAmBJ,iBADrB;AAEE,+BAAeJ,aAFjB;AAGE,0BAAU,KAAKL,gBAHjB;AAIE,6BAAaU,WAJf;AAKE,uBAAO,KAAKnB,KAAL,CAAWE,aALpB;AAME,0BAAU,KAAKM,qBANjB;AAOE,2BAAW,KAAKT,KAAL,CAAW2B;AAPxB;AATJ;AAoBE;AACE,qCADF;AAEE,uBAAS;AAAA,uBAAM,IAAN;AAAA,eAFX;AAGE,qBAAO,eAAKC,SAAL,CAAe,SAAf,EAA0Bb,aAA1B,CAHT;AAIE,yBAAW,iBAAOc;AAJpB;AApBF,WADF;AA4BE;AAAA;AAAA;AACE,8BAAgB,KADlB;AAEE,uBAAS,KAAK5B,KAAL,CAAWI,oBAFtB;AAGE,+BAAiB,KAAKM,4BAHxB;AAIE,yBAAU,KAJZ;AAKE,uBAAQ,OALV;AAME,4BAAc,uCAAK,WAAU,wBAAf,GANhB;AAOE,mCAAqB;AAAA,uBAAM,OAAKc,0BAAX;AAAA,eAPvB;AAQE,uBACE;AACE,+BAAeV,aADjB;AAEE,0BAAU,KAAKD,qBAFjB;AAGE,uBAAO,KAAKb,KAAL,CAAWG,YAHpB;AAIE,0BAAU,KAAKQ,oBAJjB;AAKE,yBAAS,KAAKZ,KAAL,CAAW8B;AALtB;AATJ;AAkBE;AACE,uBAAS;AAAA,uBAAM,IAAN;AAAA,eADX;AAEE,yCAFF;AAGE,qBAAO,eAAKF,SAAL,CAAe,OAAf,EAAwBb,aAAxB,CAHT;AAIE,yBAAW,iBAAOc;AAJpB;AAlBF,WA5BF;AAqDE;AACE,qBAASb,MADX;AAEE,kCAFF;AAGE,mBAAO,eAAKY,SAAL,CAAe,QAAf,EAAyBb,aAAzB,CAHT;AAIE,uBAAW,iBAAOc;AAJpB;AArDF,SAbF;AAyEE;AAAA;AAAA,YAAK,WAAW,0BAAW,iBAAOH,SAAlB,EAA6B,iBAAOK,iBAApC,CAAhB;AACE;AACE,qBAASd,WADX;AAEE,mBAAO,eAAKW,SAAL,CAAe,aAAf,EAA8Bb,aAA9B,CAFT;AAGE,6BAAiB,iBAAOiB,YAH1B;AAIE,qCAJF;AAKE,wBAAY,KALd;AAME,uBAAW,iBAAOC;AANpB,YADF;AASE;AACE,qBAASf,MADX;AAEE,mBAAO,eAAKU,SAAL,CAAe,QAAf,EAAyBb,aAAzB,CAFT;AAGE,6BAAiB,iBAAOmB,YAH1B;AAIE,kCAJF;AAKE,wBAAY,KALd;AAME,uBAAW,iBAAOD;AANpB;AATF;AAzEF,OADF;AA8FD;;;;;kBA1IkBlC,e;;;AA6IrBA,gBAAgBoC,SAAhB,GAA4B;AAC1BjB,UAAQ,oBAAUkB,IAAV,CAAeC,UADG;AAE1BrB,UAAQ,oBAAUoB,IAAV,CAAeC,UAFG;AAG1BpB,eAAa,oBAAUmB,IAAV,CAAeC,UAHF;AAI1BtB,iBAAe,oBAAUuB,MAAV,CAAiBD,UAJN;AAK1BlB,qBAAmB,oBAAUoB,KAAV,CAAgBF,UALT;AAM1BjB,eAAa,oBAAUgB,IANG;AAO1BT,aAAW,oBAAUS,IAAV,CAAeC,UAPA;AAQ1BP,oBAAkB,oBAAUM,IAAV,CAAeC,UARP;AAS1BhB,aAAW,oBAAUiB;AATK,CAA5B;;AAYAvC,gBAAgByC,YAAhB,GAA+B;AAC7BpB,eAAa;AAAA,WAASqB,KAAT;AAAA,GADgB;AAE7BpB,aAAW;AAFkB,CAA/B","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap_white.css';\n\nimport ForwardForm from '../ForwardForm';\nimport ReplyWithMessage from '../ReplyWithMessage';\nimport ActiveCallButton from '../ActiveCallButton';\nimport MessageIcon from '../../assets/images/MessageFill.svg';\nimport ForwardIcon from '../../assets/images/Forward.svg';\nimport IgnoreIcon from '../../assets/images/Ignore.svg';\nimport VoicemailIcon from '../../assets/images/Voicemail.svg';\nimport AnswerIcon from '../../assets/images/Answer.svg';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nexport default class IncomingCallPad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showForward: false,\n      forwardNumber: '',\n      replyMessage: null,\n      showReplyWithMessage: false,\n    };\n    this.onShowForwardChange = (visible) => {\n      this.setState({\n        showForward: visible,\n        forwardNumber: '',\n      });\n    };\n    this.onForwardNumberChange = (forwardNumber) => {\n      this.setState({ forwardNumber });\n    };\n    this.closeForwardForm = () => {\n      this.onShowForwardChange(false);\n    };\n    this.onShowReplyWithMessageChange = (visible) => {\n      this.setState({\n        showReplyWithMessage: visible,\n      });\n    };\n    this.onReplyMessageChange = (message) => {\n      this.setState({ replyMessage: message });\n    };\n    this.closeReplyWithMessage = () => {\n      this.onShowReplyWithMessageChange(false);\n    };\n  }\n\n  render() {\n    const {\n      currentLocale,\n      reject,\n      toVoiceMail,\n      answer,\n      forwardingNumbers,\n      formatPhone,\n      className,\n    } = this.props;\n    return (\n      <div className={classnames(styles.root, className)}>\n        <div\n          className={styles.forwardContainner}\n          ref={(containner) => {\n            this.forwardContainner = containner;\n          }}\n        />\n        <div\n          className={styles.replyWithMessageContainner}\n          ref={(containner) => {\n            this.replyWithMessageContainner = containner;\n          }}\n        />\n        <div className={styles.buttonRow}>\n          <Tooltip\n            defaultVisible={false}\n            visible={this.state.showForward}\n            onVisibleChange={this.onShowForwardChange}\n            placement=\"topRight\"\n            trigger=\"click\"\n            arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n            getTooltipContainer={() => this.forwardContainner}\n            overlay={\n              <ForwardForm\n                forwardingNumbers={forwardingNumbers}\n                currentLocale={currentLocale}\n                onCancel={this.closeForwardForm}\n                formatPhone={formatPhone}\n                value={this.state.forwardNumber}\n                onChange={this.onForwardNumberChange}\n                onForward={this.props.onForward}\n              />\n            }\n          >\n            <ActiveCallButton\n              icon={ForwardIcon}\n              onClick={() => null}\n              title={i18n.getString('forward', currentLocale)}\n              className={styles.callButton}\n            />\n          </Tooltip>\n          <Tooltip\n            defaultVisible={false}\n            visible={this.state.showReplyWithMessage}\n            onVisibleChange={this.onShowReplyWithMessageChange}\n            placement=\"top\"\n            trigger=\"click\"\n            arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n            getTooltipContainer={() => this.replyWithMessageContainner}\n            overlay={\n              <ReplyWithMessage\n                currentLocale={currentLocale}\n                onCancel={this.closeReplyWithMessage}\n                value={this.state.replyMessage}\n                onChange={this.onReplyMessageChange}\n                onReply={this.props.replyWithMessage}\n              />\n            }\n          >\n            <ActiveCallButton\n              onClick={() => null}\n              icon={MessageIcon}\n              title={i18n.getString('reply', currentLocale)}\n              className={styles.callButton}\n            />\n          </Tooltip>\n          <ActiveCallButton\n            onClick={reject}\n            icon={IgnoreIcon}\n            title={i18n.getString('ignore', currentLocale)}\n            className={styles.callButton}\n          />\n        </div>\n        <div className={classnames(styles.buttonRow, styles.answerButtonGroup)}>\n          <ActiveCallButton\n            onClick={toVoiceMail}\n            title={i18n.getString('toVoicemail', currentLocale)}\n            buttonClassName={styles.rejectButton}\n            icon={VoicemailIcon}\n            showBorder={false}\n            className={styles.bigCallButton}\n          />\n          <ActiveCallButton\n            onClick={answer}\n            title={i18n.getString('answer', currentLocale)}\n            buttonClassName={styles.answerButton}\n            icon={AnswerIcon}\n            showBorder={false}\n            className={styles.bigCallButton}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nIncomingCallPad.propTypes = {\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  formatPhone: PropTypes.func,\n  onForward: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nIncomingCallPad.defaultProps = {\n  formatPhone: phone => phone,\n  className: null,\n};\n"]}