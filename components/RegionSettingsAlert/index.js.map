{"version":3,"sources":["components/RegionSettingsAlert/index.js"],"names":["RegionSettingsAlert","message","currentLocale","onRegionSettingsLinkClick","msg","dialingPlansChanged","regionSettings","getString","regionSettingsLink","e","preventDefault","propTypes","shape","string","isRequired","func","defaultProps","undefined","handleMessage","saveSuccess","areaCodeInvalid"],"mappings":";;;;;kBAOwBA,mB;;AAPxB;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEe,SAASA,mBAAT,OAMZ;AAAA,MAJCC,OAID,QALDA,OAKC,CAJCA,OAID;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,yBACC,QADDA,yBACC;;AACD,MAAIC,YAAJ;AACA,UAAQH,OAAR;AACE,SAAK,iCAAuBI,mBAA5B;AAAiD;AAC/C,YAAMC,iBAAiB,eAAKC,SAAL,CAAe,gBAAf,EAAiCL,aAAjC,CAAvB;AACA,YAAMM,qBAAqBL,4BAEvB;AAAA;AAAA;AACE,qBAAS,iBAACM,CAAD,EAAO;AACdA,gBAAEC,cAAF;AACAP;AACD,aAJH;AAKGG;AALH,SAFuB,GAUzBA,cAVF;AAWAF,cACE;AACE,mBAAS,eAAKG,SAAL,CAAeN,OAAf,EAAwBC,aAAxB,CADX;AAEE,kBAAQ,EAAEM,sCAAF,EAFV,GADF;AAKD;AACC;AACF;AACEJ,YAAM,eAAKG,SAAL,CAAeN,OAAf,EAAwBC,aAAxB,CAAN;AACA;AAvBJ;AAyBA,SACE;AAAA;AAAA;AACGE;AADH,GADF;AAKD;AACDJ,oBAAoBW,SAApB,GAAgC;AAC9BV,WAAS,oBAAUW,KAAV,CAAgB;AACvBX,aAAS,oBAAUY,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAH2B;AAI9BZ,iBAAe,oBAAUW,MAAV,CAAiBC,UAJF;AAK9BX,6BAA2B,oBAAUY;AALP,CAAhC;AAOAf,oBAAoBgB,YAApB,GAAmC;AACjCb,6BAA2Bc;AADM,CAAnC;AAGAjB,oBAAoBkB,aAApB,GAAoC;AAAA,MAAGjB,OAAH,SAAGA,OAAH;AAAA,SAClCA,YAAY,iCAAuBkB,WAAnC,IACAlB,YAAY,iCAAuBI,mBADnC,IAEAJ,YAAY,iCAAuBmB,eAHD;AAAA,CAApC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport regionSettingsMessages from\n  'ringcentral-integration/modules/RegionSettings/regionSettingsMessages';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nexport default function RegionSettingsAlert({\n  message: {\n    message\n  },\n  currentLocale,\n  onRegionSettingsLinkClick,\n}) {\n  let msg;\n  switch (message) {\n    case regionSettingsMessages.dialingPlansChanged: {\n      const regionSettings = i18n.getString('regionSettings', currentLocale);\n      const regionSettingsLink = onRegionSettingsLinkClick ?\n        (\n          <a\n            onClick={(e) => {\n              e.preventDefault();\n              onRegionSettingsLinkClick();\n            }}>\n            {regionSettings}\n          </a>\n        ) :\n        regionSettings;\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{ regionSettingsLink }} />\n      );\n    }\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return (\n    <div>\n      {msg}\n    </div>\n  );\n}\nRegionSettingsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func,\n};\nRegionSettingsAlert.defaultProps = {\n  onRegionSettingsLinkClick: undefined,\n};\nRegionSettingsAlert.handleMessage = ({ message }) => (\n  message === regionSettingsMessages.saveSuccess ||\n  message === regionSettingsMessages.dialingPlansChanged ||\n  message === regionSettingsMessages.areaCodeInvalid\n);\n"]}