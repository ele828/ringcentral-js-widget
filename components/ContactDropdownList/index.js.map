{"version":3,"sources":["components/ContactDropdownList/index.js"],"names":["ContactItem","props","className","contactItem","active","spliter","phoneTypeName","getString","phoneType","phoneSourceName","entityType","nameTitle","name","phoneNumberTitle","formatContactPhone","phoneNumber","onHover","clickable","onClick","nameSection","titleEnabled","label","phoneNumberSection","propTypes","func","isRequired","string","bool","defaultProps","undefined","ContactDropdownList","nextProps","visibility","scrollDirection","selectedIndex","items","length","node","scrollTop","Math","floor","listClassName","hiddenClassName","hidden","dropdownList","c","map","item","index","setSelectedIndex","addToRecipients","arrayOf","shape","number"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nimport phoneTypeNames from '../../lib/phoneTypeNames';\nimport phoneSourceNames from '../../lib/phoneSourceNames';\n\nfunction ContactItem(props) {\n  const className = classnames(\n    styles.contactItem,\n    props.active ? styles.active : null,\n  );\n  const spliter = '|';\n  const phoneTypeName = phoneTypeNames.getString(props.phoneType);\n  const phoneSourceName = phoneSourceNames.getString(props.entityType);\n  const nameTitle = `${props.name} ${spliter} ${phoneSourceName}`;\n  const phoneNumberTitle =\n    `${props.formatContactPhone(props.phoneNumber)} ${spliter} ${phoneTypeName}`;\n\n  return (\n    <li className={className} onMouseOver={props.onHover}>\n      <div className={styles.clickable} onClick={props.onClick}>\n        <div className={styles.nameSection} title={props.titleEnabled && nameTitle}>\n          <span className={styles.name}>\n            {props.name}\n          </span>\n          <span className={styles.spliter}>{spliter}</span>\n          <span className={styles.label}>\n            {phoneSourceName}\n          </span>\n        </div>\n        <div className={styles.phoneNumberSection} title={props.titleEnabled && phoneNumberTitle}>\n          <span>\n            {props.formatContactPhone(props.phoneNumber)}\n          </span>\n          <span className={styles.spliter}>{spliter}</span>\n          <span className={styles.label}>\n            {phoneTypeName}\n          </span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  entityType: PropTypes.string.isRequired,\n  phoneType: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onHover: PropTypes.func.isRequired,\n  titleEnabled: PropTypes.bool,\n};\nContactItem.defaultProps = {\n  titleEnabled: undefined,\n};\n\nclass ContactDropdownList extends Component {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.visibility) {\n      if (nextProps.scrollDirection === 'ArrowDown') {\n        if (nextProps.selectedIndex < nextProps.items.length) {\n          if (nextProps.selectedIndex > 4) {\n            this.node.scrollTop += 53;\n            this.node.scrollTop = Math.floor(this.node.scrollTop / 53) * 53;\n          }\n        }\n      }\n      if (nextProps.scrollDirection === 'ArrowUp') {\n        if (nextProps.selectedIndex > -1) {\n          if (nextProps.selectedIndex < nextProps.items.length - 4) {\n            this.node.scrollTop -= 53;\n            this.node.scrollTop = Math.floor(this.node.scrollTop / 53) * 53;\n          }\n        }\n      }\n    }\n  }\n  render() {\n    const props = this.props;\n    const items = props.items;\n    let listClassName = null;\n    let hiddenClassName = null;\n    if (items.length === 0) {\n      hiddenClassName = styles.hidden;\n    }\n    listClassName = classnames(styles.dropdownList, props.className, hiddenClassName);\n\n    return (\n      <ul className={listClassName} ref={(c) => { this.node = c; }}>\n        {\n          items.map((item, index) => (\n            <ContactItem\n              active={props.selectedIndex === index}\n              name={item.name}\n              entityType={item.entityType}\n              phoneType={item.phoneType}\n              phoneNumber={item.phoneNumber}\n              formatContactPhone={props.formatContactPhone}\n              onHover={() => props.setSelectedIndex(index)}\n              onClick={() => props.addToRecipients({\n                name: item.name,\n                phoneNumber: item.phoneNumber,\n              })}\n              key={`${index}${item.phoneNumber}${item.name}${item.phoneType}`}\n              titleEnabled={props.titleEnabled}\n            />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nContactDropdownList.propTypes = {\n  scrollDirection: PropTypes.string,\n  visibility: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  addToRecipients: PropTypes.func.isRequired,\n  setSelectedIndex: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  titleEnabled: PropTypes.bool,\n};\n\nContactDropdownList.defaultProps = {\n  className: null,\n  scrollDirection: null,\n  titleEnabled: undefined,\n};\n\nexport default ContactDropdownList;\n"]}