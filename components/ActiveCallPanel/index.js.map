{"version":3,"sources":["components/ActiveCallPanel/index.js"],"names":["CallInfo","props","timeCounter","startTime","splitLine","avatar","avatarUrl","portrait","icon","userInfo","avatarContainer","infoContent","userName","contactDisplay","nameMatches","phoneNumber","fallBackName","currentLocale","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","brand","showContactDisplayPlaceholder","userPhoneNumber","formatPhone","propTypes","string","func","isRequired","number","array","bool","defaultProps","ActiveCallPanel","onBackButtonClick","backButtonLabel","isOnMute","isOnHold","recordStatus","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onShowKeyPad","hangup","onAdd","onShowFlipPanel","onToggleTransferPanel","children","flipNumbers","root","backButton","arrow","backIcon","backLabel","callPad","node","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport DurationCounter from '../DurationCounter';\nimport ActiveCallPad from '../ActiveCallPad';\nimport ContactDisplay from '../ContactDisplay';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nfunction CallInfo(props) {\n  const timeCounter = props.startTime ?\n    (\n      <span className={styles.timeCounter}>\n        <span className={styles.splitLine}>|</span>\n        <DurationCounter startTime={props.startTime} />\n      </span>\n    ) : null;\n  let avatar;\n  if (props.avatarUrl) {\n    avatar = (<img src={props.avatarUrl} alt=\"avatar\" />);\n  } else {\n    avatar = (<i className={classnames(dynamicsFont.portrait, styles.icon)} />);\n  }\n  return (\n    <div className={styles.userInfo}>\n      <div className={styles.avatarContainer}>\n        <div className={styles.avatar}>\n          {avatar}\n        </div>\n      </div>\n      <div className={styles.infoContent}>\n        <div className={styles.userName}>\n          <ContactDisplay\n            className={styles.contactDisplay}\n            contactMatches={props.nameMatches}\n            phoneNumber={props.phoneNumber}\n            fallBackName={props.fallBackName}\n            currentLocale={props.currentLocale}\n            areaCode={props.areaCode}\n            countryCode={props.countryCode}\n            showType={false}\n            disabled={false}\n            selected={props.selectedMatcherIndex}\n            onSelectContact={props.onSelectMatcherName}\n            isLogging={false}\n            enableContactFallback\n            brand={props.brand}\n            showPlaceholder={props.showContactDisplayPlaceholder}\n          />\n          {timeCounter}\n        </div>\n        <div className={styles.userPhoneNumber}>\n          {props.formatPhone(props.phoneNumber)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCallInfo.propTypes = {\n  phoneNumber: PropTypes.string,\n  formatPhone: PropTypes.func.isRequired,\n  startTime: PropTypes.number,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n};\n\nCallInfo.defaultProps = {\n  phoneNumber: null,\n  startTime: null,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n};\n\nfunction ActiveCallPanel({\n  onBackButtonClick,\n  backButtonLabel,\n  currentLocale,\n  nameMatches,\n  fallBackName,\n  phoneNumber,\n  formatPhone,\n  startTime,\n  areaCode,\n  countryCode,\n  selectedMatcherIndex,\n  onSelectMatcherName,\n  avatarUrl,\n  isOnMute,\n  isOnHold,\n  recordStatus,\n  onMute,\n  onUnmute,\n  onHold,\n  onUnhold,\n  onRecord,\n  onStopRecord,\n  onShowKeyPad,\n  hangup,\n  onAdd,\n  onShowFlipPanel,\n  onToggleTransferPanel,\n  children,\n  showContactDisplayPlaceholder,\n  brand,\n  flipNumbers\n}) {\n  return (\n    <div className={styles.root}>\n      <BackHeader\n        onBackClick={onBackButtonClick}\n        backButton={(\n          <span className={styles.backButton}>\n            <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n            <span className={styles.backLabel}>{backButtonLabel}</span>\n          </span>\n        )}\n        buttons={[]}\n      />\n      <Panel>\n        <CallInfo\n          currentLocale={currentLocale}\n          nameMatches={nameMatches}\n          fallBackName={fallBackName}\n          phoneNumber={phoneNumber}\n          formatPhone={formatPhone}\n          startTime={startTime}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          selectedMatcherIndex={selectedMatcherIndex}\n          onSelectMatcherName={onSelectMatcherName}\n          avatarUrl={avatarUrl}\n          brand={brand}\n          showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        />\n        <ActiveCallPad\n          className={styles.callPad}\n          currentLocale={currentLocale}\n          isOnMute={isOnMute}\n          isOnHold={isOnHold}\n          recordStatus={recordStatus}\n          onMute={onMute}\n          onUnmute={onUnmute}\n          onHold={onHold}\n          onUnhold={onUnhold}\n          onRecord={onRecord}\n          onStopRecord={onStopRecord}\n          onShowKeyPad={onShowKeyPad}\n          hangup={hangup}\n          onAdd={onAdd}\n          onShowFlipPanel={onShowFlipPanel}\n          onToggleTransferPanel={onToggleTransferPanel}\n          flipNumbers={flipNumbers}\n        />\n        {children}\n      </Panel>\n    </div>\n  );\n}\n\nActiveCallPanel.propTypes = {\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  hangup: PropTypes.func.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onShowKeyPad: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  backButtonLabel: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  onShowFlipPanel: PropTypes.func,\n  flipNumbers: PropTypes.array,\n  onToggleTransferPanel: PropTypes.func,\n};\n\nActiveCallPanel.defaultProps = {\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  backButtonLabel: 'Active Calls',\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  flipNumbers: [],\n  onShowFlipPanel: () => null,\n  onToggleTransferPanel: () => null,\n};\n\nexport default ActiveCallPanel;\n"]}