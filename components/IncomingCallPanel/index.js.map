{"version":3,"sources":["components/IncomingCallPanel/index.js"],"names":["IncomingCallPanel","UserInfo","props","avatar","avatarUrl","portrait","icon","userInfo","avatarContainer","avatarHolder","ringOutside","ringing","ringInner","userNameContainer","userName","nameMatches","phoneNumber","fallBackName","currentLocale","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","brand","showContactDisplayPlaceholder","userPhoneNumber","formatPhone","propTypes","string","isRequired","func","array","number","bool","defaultProps","className","root","backButton","onBackButtonClick","arrow","backIcon","callPad","forwardingNumbers","answer","reject","toVoiceMail","replyWithMessage","onForward","children","node","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport IncomingCallPad from '../IncomingCallPad';\nimport ContactDisplay from '../ContactDisplay';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nfunction UserInfo(props) {\n  let avatar;\n  if (props.avatarUrl) {\n    avatar = (<img src={props.avatarUrl} alt=\"avatar\" />);\n  } else {\n    avatar = (<i className={classnames(dynamicsFont.portrait, styles.icon)} />);\n  }\n  return (\n    <div className={styles.userInfo}>\n      <div className={styles.avatarContainer}>\n        <div className={styles.avatarHolder}>\n          <div className={classnames(styles.ringOutside, styles.ringing)} />\n          <div className={classnames(styles.ringInner, styles.ringing)} />\n          <div className={styles.avatar}>\n            {avatar}\n          </div>\n        </div>\n      </div>\n      <div className={styles.userNameContainer}>\n        <ContactDisplay\n          className={styles.userName}\n          contactMatches={props.nameMatches}\n          phoneNumber={props.phoneNumber}\n          fallBackName={props.fallBackName}\n          currentLocale={props.currentLocale}\n          areaCode={props.areaCode}\n          countryCode={props.countryCode}\n          showType={false}\n          disabled={false}\n          selected={props.selectedMatcherIndex}\n          onSelectContact={props.onSelectMatcherName}\n          isLogging={false}\n          enableContactFallback\n          brand={props.brand}\n          showPlaceholder={props.showContactDisplayPlaceholder}\n        />\n      </div>\n      <div className={styles.userPhoneNumber}>\n        {props.formatPhone(props.phoneNumber)}\n      </div>\n    </div>\n  );\n}\n\nUserInfo.propTypes = {\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n};\n\nUserInfo.defaultProps = {\n  className: null,\n  phoneNumber: null,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n};\n\nexport default function IncomingCallPanel(props) {\n  return (\n    <div className={classnames(styles.root, props.className)}>\n      <span className={styles.backButton} onClick={props.onBackButtonClick}>\n        <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n      </span>\n      <UserInfo\n        phoneNumber={props.phoneNumber}\n        currentLocale={props.currentLocale}\n        className={styles.userInfo}\n        formatPhone={props.formatPhone}\n        nameMatches={props.nameMatches}\n        fallBackName={props.fallBackName}\n        areaCode={props.areaCode}\n        countryCode={props.countryCode}\n        selectedMatcherIndex={props.selectedMatcherIndex}\n        onSelectMatcherName={props.onSelectMatcherName}\n        avatarUrl={props.avatarUrl}\n        brand={props.brand}\n        showContactDisplayPlaceholder={props.showContactDisplayPlaceholder}\n      />\n      <IncomingCallPad\n        className={styles.callPad}\n        forwardingNumbers={props.forwardingNumbers}\n        formatPhone={props.formatPhone}\n        answer={props.answer}\n        reject={props.reject}\n        toVoiceMail={props.toVoiceMail}\n        replyWithMessage={props.replyWithMessage}\n        onForward={props.onForward}\n        currentLocale={props.currentLocale}\n      />\n      {props.children}\n    </div>\n  );\n}\n\nIncomingCallPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string,\n  className: PropTypes.string,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  onBackButtonClick: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  onForward: PropTypes.func.isRequired,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n};\n\nIncomingCallPanel.defaultProps = {\n  className: null,\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n};\n"]}